{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar API_URL = 'http://localhost:3000';\nexport var AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(email, password) {\n        var response, parsedResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_URL, \"/auth/login\"), {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(email, password)\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                parsedResponse = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 8;\n                  break;\n                }\n\n                throw new Error(parsedResponse);\n\n              case 8:\n                return _context.abrupt(\"return\", parsedResponse);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function login(_x, _x2) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }]);\n\n  return AuthService;\n}();","map":{"version":3,"names":["API_URL","AuthService","email","password","fetch","method","headers","body","JSON","stringify","response","json","parsedResponse","ok","Error"],"sources":["C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/src/servieces/auth/authenticationServiece.js"],"sourcesContent":["const API_URL ='http://localhost:3000'\r\n\r\n\r\nexport class AuthService {\r\n  async login(email, password) {\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(email, password),\r\n    });\r\n\r\n    const parsedResponse = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(parsedResponse);\r\n    }\r\n\r\n    return parsedResponse;\r\n  }\r\n}"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAE,uBAAf;AAGA,WAAaC,WAAb;EAAA;IAAA;EAAA;;EAAA;IAAA;IAAA;MAAA,wEACE,iBAAYC,KAAZ,EAAmBC,QAAnB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACyBC,KAAK,WAAIJ,OAAJ,kBAA0B;kBACpDK,MAAM,EAAE,MAD4C;kBAEpDC,OAAO,EAAE;oBACP,gBAAgB;kBADT,CAF2C;kBAKpDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf,EAAsBC,QAAtB;gBAL8C,CAA1B,CAD9B;;cAAA;gBACQO,QADR;gBAAA;gBAAA,OAS+BA,QAAQ,CAACC,IAAT,EAT/B;;cAAA;gBASQC,cATR;;gBAAA,IAWOF,QAAQ,CAACG,EAXhB;kBAAA;kBAAA;gBAAA;;gBAAA,MAYU,IAAIC,KAAJ,CAAUF,cAAV,CAZV;;cAAA;gBAAA,iCAeSA,cAfT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CADF;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}