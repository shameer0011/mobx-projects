{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { action, makeAutoObservable, makeObservable, observable } from \"mobx\";\nimport { authService } from \"../../servieces/auth/authenticationServiece\";\nexport var AuthStore = /*#__PURE__*/function () {\n  function AuthStore() {\n    var _this = this;\n\n    _classCallCheck(this, AuthStore);\n\n    this.authenticated = false;\n\n    this.setAuthenticated = function (authenticatedd) {\n      _this.authenticated = authenticatedd;\n    };\n\n    makeAutoObservable(this);\n  }\n\n  _createClass(AuthStore, [{\n    key: \"mobxLogin\",\n    value: function () {\n      var _mobxLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, pass) {\n        var r;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return authService.loginApi(name, pass);\n\n              case 2:\n                r = _context.sent;\n                //  console.log(r)\n                localStorage.setItem(\"access_token\", r.access_token);\n                this.setAuthenticated(true); // this.authenticated = true;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function mobxLogin(_x, _x2) {\n        return _mobxLogin.apply(this, arguments);\n      }\n\n      return mobxLogin;\n    }()\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      return localStorage.getItem(\"access_token\");\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.authenticated;\n    } //im doing compoent called mobx store and mobx store called api serviece\n    // async mobxLogin(username, password) {\n    //   console.log(username, password);\n    //   // try {\n    //   const tokenPayloadDto = await this.AuthService.loginApi(username, password);\n    //   console.log(tokenPayloadDto, \"21\");\n    //   localStorage.setItem(\"access_token\", tokenPayloadDto);\n    //   // this.setAuthenticated(true);\n    //   // } catch (err) {\n    //   // this.setAuthenticated(false);\n    //   // }\n    // }\n\n  }]);\n\n  return AuthStore;\n}();","map":{"version":3,"names":["action","makeAutoObservable","makeObservable","observable","authService","AuthStore","authenticated","setAuthenticated","authenticatedd","name","pass","loginApi","r","localStorage","setItem","access_token","getItem"],"sources":["C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/src/mobx/auth-mobx/Mobx.auth.Store.js"],"sourcesContent":["import { action, makeAutoObservable, makeObservable, observable } from \"mobx\";\r\nimport { authService } from \"../../servieces/auth/authenticationServiece\";\r\n\r\nexport class AuthStore {\r\n  authenticated = false;\r\n\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n   setAuthenticated=authenticatedd=>  {\r\n    this.authenticated = authenticatedd;\r\n  }\r\n\r\n  async mobxLogin (name, pass){\r\n//  console.log(name, pass);\r\n const r = await authService.loginApi(name, pass);\r\n//  console.log(r)\r\n localStorage.setItem(\"access_token\", r.access_token);\r\n this.setAuthenticated(true)\r\n// this.authenticated = true;\r\n \r\n  }\r\n  getAccessToken() {\r\n    return localStorage.getItem(\"access_token\");\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n\r\n  //im doing compoent called mobx store and mobx store called api serviece\r\n  // async mobxLogin(username, password) {\r\n  //   console.log(username, password);\r\n  //   // try {\r\n  //   const tokenPayloadDto = await this.AuthService.loginApi(username, password);\r\n  //   console.log(tokenPayloadDto, \"21\");\r\n  //   localStorage.setItem(\"access_token\", tokenPayloadDto);\r\n  //   // this.setAuthenticated(true);\r\n  //   // } catch (err) {\r\n  //   // this.setAuthenticated(false);\r\n  //   // }\r\n  // }\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,kBAAjB,EAAqCC,cAArC,EAAqDC,UAArD,QAAuE,MAAvE;AACA,SAASC,WAAT,QAA4B,6CAA5B;AAEA,WAAaC,SAAb;EAIE,qBAAc;IAAA;;IAAA;;IAAA,KAHdC,aAGc,GAHE,KAGF;;IAAA,KAIbC,gBAJa,GAII,UAAAC,cAAc,EAAI;MAClC,KAAI,CAACF,aAAL,GAAqBE,cAArB;IACD,CANa;;IACZP,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EANH;IAAA;IAAA;MAAA,4EAYE,iBAAiBQ,IAAjB,EAAuBC,IAAvB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEeN,WAAW,CAACO,QAAZ,CAAqBF,IAArB,EAA2BC,IAA3B,CAFf;;cAAA;gBAEKE,CAFL;gBAGF;gBACCC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,CAAC,CAACG,YAAvC;gBACA,KAAKR,gBAAL,CAAsB,IAAtB,EALC,CAMF;;cANE;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAZF;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OAqBE,0BAAiB;MACf,OAAOM,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAP;IACD;EAvBH;IAAA;IAAA,OAyBE,2BAAkB;MAChB,OAAO,KAAKV,aAAZ;IACD,CA3BH,CA6BE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAxCF;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}