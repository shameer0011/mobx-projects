{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nvar API_URL = ' http://localhost:3000';\nexport var AuthService = /*#__PURE__*/_createClass(function AuthService() {\n  _classCallCheck(this, AuthService);\n\n  this.loginApi = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(email, password) {\n      var response, parsedResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(API_URL, \"/auth/login\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                })\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              parsedResponse = _context.sent;\n\n              if (response.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              throw new Error(parsedResponse);\n\n            case 8:\n              return _context.abrupt(\"return\", parsedResponse);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});\nexport var authService = new AuthService(); // this only gpoing to MOBX STORE","map":{"version":3,"names":["API_URL","AuthService","loginApi","email","password","fetch","method","headers","body","JSON","stringify","response","json","parsedResponse","ok","Error","authService"],"sources":["C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/src/servieces/auth/authenticationServiece.js"],"sourcesContent":["const API_URL =' http://localhost:3000'\r\n\r\n\r\nexport class AuthService {\r\n   loginApi=async(email, password)=> {\r\n    // console.log(email, password);\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      \r\n      body: JSON.stringify({email, password}),\r\n    });\r\n\r\n    const parsedResponse = await response.json();\r\n    // console.log(parsedResponse, \"22\");\r\n    if (!response.ok) {\r\n      throw new Error(parsedResponse);\r\n    }\r\n\r\n    return parsedResponse;\r\n  }\r\n}\r\nexport const authService = new AuthService();\r\n\r\n\r\n// this only gpoing to MOBX STORE"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAE,wBAAf;AAGA,WAAaC,WAAb;EAAA;;EAAA,KACGC,QADH;IAAA,sEACY,iBAAMC,KAAN,EAAaC,QAAb;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAEeC,KAAK,WAAIL,OAAJ,kBAA0B;gBACpDM,MAAM,EAAE,MAD4C;gBAEpDC,OAAO,EAAE;kBACP,gBAAgB;gBADT,CAF2C;gBAMpDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;kBAACP,KAAK,EAALA,KAAD;kBAAQC,QAAQ,EAARA;gBAAR,CAAf;cAN8C,CAA1B,CAFpB;;YAAA;cAEFO,QAFE;cAAA;cAAA,OAWqBA,QAAQ,CAACC,IAAT,EAXrB;;YAAA;cAWFC,cAXE;;cAAA,IAaHF,QAAQ,CAACG,EAbN;gBAAA;gBAAA;cAAA;;cAAA,MAcA,IAAIC,KAAJ,CAAUF,cAAV,CAdA;;YAAA;cAAA,iCAiBDA,cAjBC;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CADZ;;IAAA;MAAA;IAAA;EAAA;AAAA;AAqBA,OAAO,IAAMG,WAAW,GAAG,IAAIf,WAAJ,EAApB,C,CAGP"},"metadata":{},"sourceType":"module"}