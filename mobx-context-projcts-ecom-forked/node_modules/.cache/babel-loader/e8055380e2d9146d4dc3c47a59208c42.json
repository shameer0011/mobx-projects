{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { action, makeAutoObservable, makeObservable, observable } from \"mobx\"; // import  {AuthService}  from \"../../servieces/auth/authenticationServiece\";\n\nexport var AuthStore = /*#__PURE__*/function () {\n  function AuthStore(AuthService) {\n    var _this = this;\n\n    _classCallCheck(this, AuthStore);\n\n    this.authenticated = false;\n\n    this.setAuthenticated = function (authenticated) {\n      _this.authenticated = authenticated;\n    };\n\n    this.AuthService = AuthService;\n    makeObservable(this, {\n      authenticated: observable,\n      mobxLogin: action,\n      getAccessToken: action // isAuthenticated: action,\n\n    });\n  }\n\n  _createClass(AuthStore, [{\n    key: \"mobxLogin\",\n    value: //im doing compoent called mobx store and mobx store called api serviece\n    function () {\n      var _mobxLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(username, password) {\n        var tokenPayloadDto;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(username, password);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.AuthService.loginApi(username, password);\n\n              case 4:\n                tokenPayloadDto = _context.sent;\n                console.log(tokenPayloadDto, \"21\");\n                localStorage.setItem(\"access_token\", tokenPayloadDto);\n                this.setAuthenticated(true);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                this.setAuthenticated(false);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      function mobxLogin(_x, _x2) {\n        return _mobxLogin.apply(this, arguments);\n      }\n\n      return mobxLogin;\n    }()\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      return localStorage.getItem(\"access_token\");\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.authenticated;\n    }\n  }]);\n\n  return AuthStore;\n}();","map":{"version":3,"names":["action","makeAutoObservable","makeObservable","observable","AuthStore","AuthService","authenticated","setAuthenticated","mobxLogin","getAccessToken","username","password","console","log","loginApi","tokenPayloadDto","localStorage","setItem","getItem"],"sources":["C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/src/mobx/auth-mobx/Mobx.auth.Store.js"],"sourcesContent":["import { action, makeAutoObservable, makeObservable, observable } from \"mobx\";\r\n// import  {AuthService}  from \"../../servieces/auth/authenticationServiece\";\r\n\r\nexport class AuthStore {\r\n  authenticated = false;\r\n\r\n  constructor(AuthService) {\r\n    this.AuthService = AuthService;\r\n    makeObservable(this, {\r\n      authenticated: observable,\r\n      mobxLogin: action,\r\n      getAccessToken: action\r\n      // isAuthenticated: action,\r\n    });\r\n  }\r\n  setAuthenticated = (authenticated) => {\r\n    this.authenticated = authenticated;\r\n  };\r\n  //im doing compoent called mobx store and mobx store called api serviece\r\n  async mobxLogin(username, password) {\r\n    console.log(username, password);\r\n    try {\r\n      const tokenPayloadDto = await this.AuthService.loginApi(\r\n        username,\r\n        password\r\n      );\r\n      console.log(tokenPayloadDto, \"21\");\r\n      localStorage.setItem(\"access_token\", tokenPayloadDto);\r\n      this.setAuthenticated(true);\r\n    } catch (err) {\r\n      this.setAuthenticated(false);\r\n    }\r\n  }\r\n\r\n  getAccessToken() {\r\n    return localStorage.getItem(\"access_token\");\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,kBAAjB,EAAqCC,cAArC,EAAqDC,UAArD,QAAuE,MAAvE,C,CACA;;AAEA,WAAaC,SAAb;EAGE,mBAAYC,WAAZ,EAAyB;IAAA;;IAAA;;IAAA,KAFzBC,aAEyB,GAFT,KAES;;IAAA,KASzBC,gBATyB,GASN,UAACD,aAAD,EAAmB;MACpC,KAAI,CAACA,aAAL,GAAqBA,aAArB;IACD,CAXwB;;IACvB,KAAKD,WAAL,GAAmBA,WAAnB;IACAH,cAAc,CAAC,IAAD,EAAO;MACnBI,aAAa,EAAEH,UADI;MAEnBK,SAAS,EAAER,MAFQ;MAGnBS,cAAc,EAAET,MAHG,CAInB;;IAJmB,CAAP,CAAd;EAMD;;EAXH;IAAA;IAAA,OAeE;IAfF;MAAA,4EAgBE,iBAAgBU,QAAhB,EAA0BC,QAA1B;QAAA;QAAA;UAAA;YAAA;cAAA;gBACEC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,QAAtB;gBADF;gBAAA;gBAAA,OAGkC,KAAKN,WAAL,CAAiBS,QAAjB,CAC5BJ,QAD4B,EAE5BC,QAF4B,CAHlC;;cAAA;gBAGUI,eAHV;gBAOIH,OAAO,CAACC,GAAR,CAAYE,eAAZ,EAA6B,IAA7B;gBACAC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,eAArC;gBACA,KAAKR,gBAAL,CAAsB,IAAtB;gBATJ;gBAAA;;cAAA;gBAAA;gBAAA;gBAWI,KAAKA,gBAAL,CAAsB,KAAtB;;cAXJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAhBF;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OA+BE,0BAAiB;MACf,OAAOS,YAAY,CAACE,OAAb,CAAqB,cAArB,CAAP;IACD;EAjCH;IAAA;IAAA,OAmCE,2BAAkB;MAChB,OAAO,KAAKZ,aAAZ;IACD;EArCH;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}