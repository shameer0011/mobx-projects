{"ast":null,"code":"import _classCallCheck from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { makeAutoObservable } from \"mobx\"; // import { LoginRequest } from \"../dto/request/login-request.dto\";\n// import { AuthService } from \"../services/auth.service\";\n\nexport var AuthStore = /*#__PURE__*/function () {\n  function AuthStore() {\n    _classCallCheck(this, AuthStore);\n\n    this.authenticated = false;\n    makeAutoObservable(this);\n  } //   async login(loginRequest: LoginRequest) {\n  //     try {\n  //       const tokenPayloadDto = await this.authService.login(loginRequest);\n  //       localStorage.setItem(\"access_token\", tokenPayloadDto.access_token);\n  //       this.setAuthenticated(true);\n  //     } catch (err) {\n  //       this.setAuthenticated(false);\n  //     }\n  //   }\n\n\n  _createClass(AuthStore, [{\n    key: \"setAuthenticated\",\n    value: function setAuthenticated(authenticated) {\n      this.authenticated = authenticated;\n    } //   getAccessToken() {\n    //     return localStorage.getItem(\"access_token\");\n    //   }\n\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.authenticated;\n    }\n  }]);\n\n  return AuthStore;\n}();","map":{"version":3,"names":["makeAutoObservable","AuthStore","authenticated"],"sources":["C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/src/mobx/auth-mobx/Mobx.auth.Store.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n// import { LoginRequest } from \"../dto/request/login-request.dto\";\r\n// import { AuthService } from \"../services/auth.service\";\r\n\r\nexport class AuthStore {\r\n  authenticated = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    \r\n  }\r\n\r\n//   async login(loginRequest: LoginRequest) {\r\n//     try {\r\n//       const tokenPayloadDto = await this.authService.login(loginRequest);\r\n//       localStorage.setItem(\"access_token\", tokenPayloadDto.access_token);\r\n//       this.setAuthenticated(true);\r\n//     } catch (err) {\r\n//       this.setAuthenticated(false);\r\n//     }\r\n//   }\r\n\r\n setAuthenticated(authenticated) {\r\n    this.authenticated = authenticated;\r\n  }\r\n\r\n//   getAccessToken() {\r\n//     return localStorage.getItem(\"access_token\");\r\n//   }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,MAAnC,C,CACA;AACA;;AAEA,WAAaC,SAAb;EAGE,qBAAc;IAAA;;IAAA,KAFdC,aAEc,GAFE,KAEF;IACZF,kBAAkB,CAAC,IAAD,CAAlB;EAED,CANH,CAQA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAhBA;IAAA;IAAA,OAkBC,0BAAiBE,aAAjB,EAAgC;MAC7B,KAAKA,aAAL,GAAqBA,aAArB;IACD,CApBH,CAsBA;IACA;IACA;;EAxBA;IAAA;IAAA,OA0BE,2BAAkB;MAChB,OAAO,KAAKA,aAAZ;IACD;EA5BH;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}