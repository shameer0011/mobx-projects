{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { makeAutoObservable } from \"mobx\"; // import { LoginRequest } from \"../dto/request/login-request.dto\";\n// import { AuthService } from \"../services/auth.service\";\n\nexport var AuthStore = /*#__PURE__*/function () {\n  function AuthStore(AuthService) {\n    _classCallCheck(this, AuthStore);\n\n    this.authenticated = false;\n    makeAutoObservable(this);\n  } //im doing compoent called mobx store and mobx store called api serviece\n\n\n  _createClass(AuthStore, [{\n    key: \"mobxLogin\",\n    value: function () {\n      var _mobxLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(username, password) {\n        var tokenPayloadDto;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.authService.login(loginRequest);\n\n              case 3:\n                tokenPayloadDto = _context.sent;\n                localStorage.setItem(\"access_token\", tokenPayloadDto.access_token);\n                this.setAuthenticated(true);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.setAuthenticated(false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function mobxLogin(_x, _x2) {\n        return _mobxLogin.apply(this, arguments);\n      }\n\n      return mobxLogin;\n    }()\n  }, {\n    key: \"setAuthenticated\",\n    value: function setAuthenticated(authenticated) {\n      this.authenticated = authenticated;\n    } //   getAccessToken() {\n    //     return localStorage.getItem(\"access_token\");\n    //   }\n\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.authenticated;\n    }\n  }]);\n\n  return AuthStore;\n}();","map":{"version":3,"names":["makeAutoObservable","AuthStore","AuthService","authenticated","username","password","authService","login","loginRequest","tokenPayloadDto","localStorage","setItem","access_token","setAuthenticated"],"sources":["C:/Users/DELL/Downloads/mobx-context-projcts-ecom-forked/src/mobx/auth-mobx/Mobx.auth.Store.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n// import { LoginRequest } from \"../dto/request/login-request.dto\";\r\n// import { AuthService } from \"../services/auth.service\";\r\n\r\nexport class AuthStore {\r\n  authenticated = false;\r\n\r\n  constructor(AuthService) {\r\n    makeAutoObservable(this);\r\n    \r\n  }\r\n//im doing compoent called mobx store and mobx store called api serviece\r\n  async mobxLogin(username, password) {\r\n    try {\r\n      const tokenPayloadDto = await this.authService.login(loginRequest);\r\n      localStorage.setItem(\"access_token\", tokenPayloadDto.access_token);\r\n      this.setAuthenticated(true);\r\n    } catch (err) {\r\n      this.setAuthenticated(false);\r\n    }\r\n  }\r\n\r\n setAuthenticated(authenticated) {\r\n    this.authenticated = authenticated;\r\n  }\r\n\r\n//   getAccessToken() {\r\n//     return localStorage.getItem(\"access_token\");\r\n//   }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n}"],"mappings":";;;;AAAA,SAASA,kBAAT,QAAmC,MAAnC,C,CACA;AACA;;AAEA,WAAaC,SAAb;EAGE,mBAAYC,WAAZ,EAAyB;IAAA;;IAAA,KAFzBC,aAEyB,GAFT,KAES;IACvBH,kBAAkB,CAAC,IAAD,CAAlB;EAED,CANH,CAOA;;;EAPA;IAAA;IAAA;MAAA,4EAQE,iBAAgBI,QAAhB,EAA0BC,QAA1B;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEkC,KAAKC,WAAL,CAAiBC,KAAjB,CAAuBC,YAAvB,CAFlC;;cAAA;gBAEUC,eAFV;gBAGIC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,eAAe,CAACG,YAArD;gBACA,KAAKC,gBAAL,CAAsB,IAAtB;gBAJJ;gBAAA;;cAAA;gBAAA;gBAAA;gBAMI,KAAKA,gBAAL,CAAsB,KAAtB;;cANJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CARF;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OAkBC,0BAAiBV,aAAjB,EAAgC;MAC7B,KAAKA,aAAL,GAAqBA,aAArB;IACD,CApBH,CAsBA;IACA;IACA;;EAxBA;IAAA;IAAA,OA0BE,2BAAkB;MAChB,OAAO,KAAKA,aAAZ;IACD;EA5BH;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}